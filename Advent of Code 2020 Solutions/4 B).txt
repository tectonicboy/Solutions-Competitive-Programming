#include <string>
#include <algorithm>
#include <vector>
#include <cmath>
#include <iostream>
#include <iterator>
#include <tuple>


using namespace std;


bool check_pass(string& s) {
	string dummy = "", field = "";
	for (string::iterator it = s.begin(); it != s.end(); ++it) {
		while (*it != ' ') {
			dummy.push_back(*it);
			++it;
		}
		cout << "\tRead the section: " << dummy << "\n";
		field.push_back(dummy[0]); 
		field.push_back(dummy[1]); 
		field.push_back(dummy[2]);
		dummy.erase(dummy.begin(), dummy.begin() + 4);
		//Now dummy is the value of the field.
		if (field == "byr") {
			if (((dummy.size() == 4)) && ((stoi(dummy) >= 1920) && (stoi(dummy) <= 2002))) {
				goto label1;
			}
			else {return false;}
		}
		else if (field == "iyr") {
			if (((dummy.size() == 4)) && ((stoi(dummy) >= 2010) && (stoi(dummy) <= 2020))) {
				goto label1;
			}
			else { return false;}
		}
		else if (field == "eyr") {
			if (((dummy.size() == 4)) && ((stoi(dummy) >= 2020) && (stoi(dummy) <= 2030))) {
				goto label1;
			}
			else {return false;}
		}
		else if (field == "hgt") {
			if ((*(dummy.end() - 2) == 'c') && (*(dummy.end() - 1) == 'm')) {
				dummy.erase(dummy.end() - 2, dummy.end());
				if (stoi(dummy) < 150 || stoi(dummy) > 193) {  return false;}
				else {goto label1;}
			}
			else if ((*(dummy.end() - 2) == 'i') && (*(dummy.end() - 1) == 'n')) {
				dummy.erase(dummy.end() - 2, dummy.end());
				if (stoi(dummy) < 59 || stoi(dummy) > 76) {  return false;}
				else {goto label1;}
			}
			else {return false;}
		}
		else if (field == "hcl") {
			if (dummy[0] != '#') {  return false; }
			for (size_t i = 1; i < dummy.size(); ++i) {
				if ((!(dummy[i] > 47 && dummy[i] < 58)) && (!(dummy[i] > 96 && dummy[i] < 103))) {
					return false;
				}
			}
			goto label1;
		}
		else if (field == "ecl") {
			if (dummy != "amb" && dummy != "blu" && dummy != "brn" && dummy != "gry" && dummy != "grn" && dummy != "hzl" && dummy != "oth") {
				return false;
			}
			goto label1;
		}
		else if (field == "pid") {
			if (dummy.size() != 9) { return false; }
			for (size_t i = 0; i < dummy.size(); ++i) {
				if (!isdigit(dummy[i])) { return false; }
			}
			goto label1;
		}
		else if (field == "cid") { goto label1; }
		label1:
		dummy = "";
		field = "";
	}
	return true;
}

int main() {
	string str = "", line = "";
	int counter = 0;
	vector<string> vec = {};

	while (getline(cin, line)) {
		if (line.size() == 0) {
			vec.push_back(str);
			str = "";
			counter = 0;
		}
		else if (line == "END") {
			vec.push_back(str);
			counter = 0;
			break;
		}
		else {
			if (counter) { str.push_back(' '); }
			str += line;
			++counter;
		}
	}
	string dummy = "";
	bool found = false;
	int sections = 0, missing = 0, valid = 0;
	for (size_t i = 0; i < vec.size(); ++i) {
		vec[i].push_back(' ');
		for (string::iterator it = vec[i].begin(); it != vec[i].end(); ++it) {
			while (*it != ' ') {
				dummy.push_back(*it);
				++it;
			}
			++sections;
			if (dummy[0] == 'c' && dummy[1] == 'i' && dummy[2] == 'd') {
				found = true;
			}
			dummy = "";
		}
		missing = 8 - sections;
		sections = 0;
		if ((missing == 1 && !found) || (missing == 0)) {
			if (check_pass(vec[i])) {
				++valid;
			}
		}
		found = false;
	}
	cout << "Answer: " << valid << "\n";
	return 0;
}